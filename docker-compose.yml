version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: vikesh@2001
      POSTGRES_DB: Slot
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d Slot"]
      interval: 5s
      timeout: 3s
      retries: 15

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.server
    platform: linux/amd64        # or linux/arm64 â€” pick ONE and keep it everywhere
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGHOST: db
      PGUSER: postgres
      PGPASSWORD: vikesh@2001
      PGDATABASE: Slot
      PGPORT: 5432
      DATABASE_URL: postgres://postgres:vikesh@2001@db:5432/Slot
      # Ensure dev deps allowed during build; runtime can be NODE_ENV=production if you want
      NODE_ENV: development
    ports:
      - "5001:5001"
    volumes:
      - ./backend:/app
      - /app/node_modules          # prevent host node_modules leaking in
    command: ["npm","start"]
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.client
    platform: linux/amd64        # match backend if you set it
    depends_on:
      - backend
    environment:
      VITE_API_URL: http://backend:5001
      NODE_ENV: development
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["npm","run","dev","--","--host","0.0.0.0"]
    restart: unless-stopped

volumes:
  db_data:
